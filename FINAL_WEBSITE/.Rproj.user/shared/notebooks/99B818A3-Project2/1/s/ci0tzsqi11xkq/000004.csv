"0",""
"0","widths<-diff(ROC1$FPR) #horizontal distances"
"0","heights<-(ROC1$TPR[-1]+ROC1$TPR[-length(ROC1$TPR)])/2 #avg heights"
"0","AUC<-sum(heights*widths) #sum up areas of trapezoids"
"0","AUC"
"1","[1]"
"1"," 0.9516936"
"1","
"
"0","data -> pokemon"
"0","set.seed(1234)"
"0","k=10 "
"0","data1<-pokemon[sample(nrow(pokemon)),] #randomly order rows"
"0","folds<-cut(seq(1:nrow(pokemon)),breaks=k,labels=F) #create folds"
"0","diags<-NULL"
"0","for(i in 1:k){"
"0"," ## Create training and test sets"
"0"," train<-data1[folds!=i,]"
"0"," test<-data1[folds==i,]"
"0"," truth<-test$mega"
"0"," ## Train model on training set"
"0"," fit<-glm(mega~base_total,data=pokemon,family=""binomial"")"
"0"," probs<-predict(fit,newdata = test,type=""response"")"
"0"," ## Test model on test set (save all k results)"
"0"," diags<-rbind(diags,class_diag(probs,truth))"
"0","}"
"0",""
"0","apply(diags,2,mean)"
"1","      acc "
"1","     sens "
"1","     spec "
"1","      ppv "
"1","      auc "
"1","
"
"1","0.9363580 "
"1","0.2550000 "
"1","0.9775398 "
"1","      NaN "
"1","0.9398991 "
"1","
"
