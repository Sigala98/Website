blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::new_site(theme="nurlansu/hugo-sustain")
blogdown::new_site(theme="nurlansu/hugo-sustain")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
get wd
get_wd
install.packages("glmnet")
??glmnet
blogdown::serve_site()
install.packages("glmnet")
blogdown:::new_post_addin()
install.packages("glmnet")
blogdown::serve_site()
install.packages("glmnet")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz, repos=FALSE, type="source")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz, repos=FALSE, type="source")
install.packages(https:/cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz, repos=FALSE, type="source")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz, repos=FALSE, type="source")
install.packages(https: //cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz, repos=FALSE, type="source")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source")
install.packages("https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source"")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz)
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source")
install.packages(http://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source")
install.packages(https://cran.r-project.org/bin/macosx/el-capitan/contrib/3.5/glmnet_2.0-18.tgz , repos=FALSE, type="source")
pokemon <- read.csv("~/Desktop/pokemon.csv")
View(pokemon)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(lmtest)
library(sandwich)
library(plotROC)
#library(glmnet)
class_diag<-function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
pokemon <- read.csv("pokemon.csv")
pokemon <- pokemon
pokemon$mega<-as.factor(pokemon$mega)
man1<-manova(cbind(height_m,weight_kg)~type1, data=pokemon)
summary(man1)
pokemon <- pokemon
pokemon$mega<-as.factor(pokemon$mega)
man1<-manova(cbind(height_m,weight_kg)~type1, data=pokemon)
summary(man1)
pokemon <- pokemon
pokemon$mega<-as.factor(pokemon$mega)
man1<-manova(cbind(height_m,weight_kg)~type1, data=pokemon)
summary(man1)
summary.aov(man1)
pokemon%>%group_by(type1)%>%summarize(mean(height_m,na.rm=T),mean(weight_kg,na.rm=T))
pairwise.t.test(pokemon$height_m,pokemon$type1,p.adj="none")
pairwise.t.test(pokemon$weight_kg,pokemon$type1,p.adj="none")
.05/(1+2+49+49)
pokemon%>%group_by(mega)%>%summarize(means=mean(base_total)) %>% summarize(`mean_diff:`=diff(means))
rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(time=sample(pokemon$base_total),condition=pokemon$mega)
rand_dist[i]<-mean(new[new$condition=="1",]$time)-
mean(new[new$condition=="0",]$time)}
{hist(rand_dist,main="",ylab=""); abline(v = -204.7756,col="blue")}
mean(rand_dist>204.7756)*2
pokemon$weight_c<-pokemon$weight_kg-mean(pokemon$weight_kg,na.rm=T)
pokemon$height_c<-pokemon$height_m-mean(pokemon$height_m,na.rm=T)
fit1<-lm(base_total~weight_c*height_c, data=pokemon)
summary(fit1)
ggplot(pokemon,aes(height_c,weight_c,color=base_total))+geom_point()
bptest(fit1)
coeftest(fit1, vcov = vcovHC(fit1))[,1:2]
fit2<-lm(base_total~weight_c+height_c, data=pokemon)
anova(fit1,fit2,test="LRT")
samp_distn<-replicate(5000, {
boot_dat<-pokemon[sample(nrow(pokemon),replace=TRUE),]
fit3<-lm(base_total~weight_c*height_c,data=boot_dat)
coef(fit3)
})
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
odds<-function(x)x/(1-x)
logit<-function(x)log(odds(x))
fit4<-glm(mega~base_total+type1, data=pokemon, family=binomial)
summary(fit4)
exp(coeftest(fit4)) %>% round(3)
pokemon$prob<-predict(fit4,type="response")
table(predict=as.numeric(pokemon$prob>.5),truth=pokemon$mega)%>%addmargins
pokemon$logit<-predict(fit4,type="link")
pokemon%>%ggplot()+geom_density(aes(logit,color=mega,fill=mega), alpha=.4)+
theme(legend.position=c(.85,.85))+geom_vline(xintercept=0)+xlab("predictor (logit)")
pokemon -> data
sens<-function(p,data=data, y=mega) mean(data[data$mega==1,]$prob>p)
spec<-function(p,data=data, y=mega) mean(data[data$mega==0,]$prob<p)
TPR<-sapply(seq(0,1,.01),sens,data)
FPR<-sapply(seq(0,1,.01),spec,data)
ROC1<-data.frame(TPR,FPR,cutoff=seq(0,1,.01))
ROC1%>%ggplot(aes(FPR,TPR))+geom_path(size=1.5)
widths<-diff(ROC1$FPR) #horizontal distances
heights<-(ROC1$TPR[-1]+ROC1$TPR[-length(ROC1$TPR)])/2 #avg heights
AUC<-sum(heights*widths) #sum up areas of trapezoids
AUC
data -> pokemon
set.seed(1234)
k=10
data1<-pokemon[sample(nrow(pokemon)),] #randomly order rows
folds<-cut(seq(1:nrow(pokemon)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
train<-data1[folds!=i,]
test<-data1[folds==i,]
truth<-test$mega
## Train model on training set
fit<-glm(mega~base_total,data=pokemon,family="binomial")
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
apply(diags,2,mean)
pokemon <- read.csv(pokemon)
pokemon <- read.csv(pokemon.csv)
pokemon$mega<-as.factor(pokemon$mega)
mydata <- read.table("c:/pokemon.csv", header=TRUE,
sep=",", row.names="id")
read.csv(file="C:/Users/Cristian/Desktop/pokemon.csv")
read.csv(file="C:/Users/Cristian/Desktop/pokemon.csv")
pokemon <- read.csv("~/Desktop/pokemon.csv")
pokemon$mega<-as.factor(pokemon$mega)
man1<-manova(cbind(height_m,weight_kg)~type1, data=pokemon)
summary(man1)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
# Using refind.all on python
install.packages("reticulate")
```{python}
install.packages("reticulate")
import pandas
flights = pandas.read_csv("flights.csv)
library("png")
install.packages("png")
library("png")
![python](~/Desktop/python.png)
pp <- readPNG("python.png")
pp <- readPNG("~/Desktop/python.png")
~/Desktop/python.png
! [Alt text] (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
! [Alt text (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png) ]
!  (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
!(~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
!(Users/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
!(~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
pp <- readPNG("(~/Desktop/Website/FINAL_WEBSITE/static/img/python.png")
![alt text] ("~/Desktop/Website/FINAL_WEBSITE/static/img/python.png")
![alt text] ("~/Desktop/Website/FINAL_WEBSITE/static/img/python.png")
![alt text] ("~/Desktop/Website/FINAL_WEBSITE/static/img/python.png")
![alt text] ("~/Desktop/Website/FINAL_WEBSITE/static/img/python.png")
![alt text] (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
![alt text] (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
![NS] (~/Desktop/Website/FINAL_WEBSITE/static/img/python.png)
![NS] (python.png)
![NS] (python.png)
![NS] (python.png)
![optional caption text](python/img.png)
![NS] (python.png)
![optional caption text](static/img.png)
![NS] (python.png)
![optional caption text](img/python.png)
![NS] (python.png)
![optional caption text](~/Desktop/python.png)
![NS] (python.png)
![optional caption text](~/Desktop/python.png)
![NS] (python.png)
![optional caption text](~/Desktop/python.png)
blogdown::serve_site()
blogdown::serve_site()
